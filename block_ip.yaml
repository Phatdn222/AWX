---
- name: Ultimate IP Blocker for AWX
  hosts: all
  become: yes
  vars:
    malicious_ip: "{{ malicious_ip }}"
    allowed_ranges: ["192.168.1.0/24"]  # Whitelist IP ranges
    
  tasks:
    - name: Validate IP address
      ansible.builtin.fail:
        msg: "IP {{ malicious_ip }} not in allowed ranges"
      when: malicious_ip.split('.')[0:3] not in allowed_ranges|map('split', '.')[0:3]

    - name: Detect execution environment
      ansible.builtin.set_fact:
        is_container: "{{ 'AWX_CONTAINER_HOST' in ansible_facts.env }}"
        
    - name: Block IP on Host (Direct)
      ansible.builtin.raw: |
        /usr/sbin/iptables -I INPUT -s {{ malicious_ip }} -j DROP
        /usr/sbin/iptables -I DOCKER-USER -s {{ malicious_ip }} -j DROP
        /usr/sbin/iptables-save > /etc/iptables/rules.v4
      when: not is_container|bool
      register: host_result
      changed_when: host_result.rc == 0

    - name: Block IP from Container (via Docker API)
      ansible.builtin.shell: |
        docker run --rm --net=host \
        -v /usr/sbin/iptables:/usr/sbin/iptables \
        -v /etc/iptables:/etc/iptables \
        alpine sh -c "
        apk add iptables --no-cache;
        iptables -I INPUT -s {{ malicious_ip }} -j DROP;
        iptables -I DOCKER-USER -s {{ malicious_ip }} -j DROP;
        iptables-save > /etc/iptables/rules.v4"
      args:
        executable: /bin/bash
      when: is_container|bool
      register: container_result
      changed_when: container_result.rc == 0

    - name: Ensure persistence (Debian/Ubuntu)
      ansible.builtin.apt:
        name: iptables-persistent
        state: present
      when: 
        - ansible_facts.os_family == 'Debian'
        - not is_container|bool

    - name: Ensure persistence (RHEL/CentOS)
      ansible.builtin.yum:
        name: iptables-services
        state: present
      when: 
        - ansible_facts.os_family == 'RedHat'
        - not is_container|bool

  handlers:
    - name: Restart iptables service
      ansible.builtin.service:
        name: "{{ 'netfilter-persistent' if ansible_facts.os_family == 'Debian' else 'iptables' }}"
        state: restarted
      when: not is_container|bool
